<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>left = false;
right = false;
up = false;
down = false;

tap_posx = 0
tap_posy = 0

input_tap_on = false
input_tapx = 0
input_tapy = 0

input_posx = 0
input_posy = 0

swipe_bufferx = 50
swipe_buffery = 50


done_swipe = 0
swipe_timer = 4

can_swipe = true

buffer = 0
buffer_max = 400



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.op_system == 0 || global.op_system == 1)
    {
    if (mouse_check_button_pressed(mb_any))
        {
        tap_posx = mouse_x
        tap_posy = mouse_y
        }
    if (mouse_check_button(mb_any))
        {
        input_tap_on  = true
        input_posx = mouse_x
        input_posy = mouse_y
        }
    else
        {
        input_tap_on  = false
        }
    }

if(done_swipe &gt;= swipe_timer)
    {
    left = false
    right = false
    up = false
    down = false
    tap_posx = mouse_x
    tap_posy = mouse_y  
    can_swipe = true  
    done_swipe = 0
    }
        
if (input_tap_on)
    {
    
    done_swipe += 1
    
    if (can_swipe)
        {
        if (input_posx &gt; tap_posx + swipe_bufferx)
            {
            right = true
            can_swipe = false
            
            }
            
        if (input_posx &lt; tap_posx - swipe_bufferx)
            {
            left = true
            can_swipe = false

            }
            
        if (input_posy &gt; tap_posy + swipe_buffery)
            {
            down = true
            can_swipe = false

            }
            
        if (input_posy &lt; tap_posy - swipe_buffery)
            {
            up = true
            can_swipe = false

            }
        }
    }
else
    {
    can_swipe = true
    }
    

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug)
    {
    draw_set_color(c_white);
    draw_text(10,20,"can_swipe" + string(can_swipe))
    draw_text(10,40,"is_tapping" + string(input_tap_on))
    draw_text(10,60,"left" + string(left))
    draw_text(10,80,"right" + string(right))
    draw_text(10,100,"up" + string(up))
    draw_text(10,120,"down" + string(down))
    draw_text(10,140,"swipe timer:" + string(done_swipe) + "/" + string(swipe_timer))
    
    if (input_tap_on)
        {
        draw_set_color(c_red);
        draw_line(tap_posx,tap_posy,input_posx,input_posy)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
